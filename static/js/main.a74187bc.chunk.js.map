{"version":3,"sources":["components/molecules/Footer/Footer.tsx","layouts/Common/Common.tsx","components/atoms/Logo/Logo.tsx","components/orgranisms/TopNavigation/TopNavigation.tsx","components/atoms/Control/Control.tsx","api/schema.client.graphql","components/atoms/Layout/Layout.module.css","components/atoms/Layout/Content.module.css","components/molecules/Footer/Footer.module.css","components/atoms/Card/Card.module.css","components/atoms/Control/Control.module.css","components/orgranisms/PizzaScroller/PizzaScroller.module.css","api/utils/simulateDelay.ts","api/resolvers/mock.ts","api/resolvers/products.ts","api/resolvers/cart.ts","api/client.ts","components/atoms/Card/Card.tsx","assets/icons/x-circle.svg","components/molecules/Dialog/Dialog.tsx","components/orgranisms/Configurator/Configurator.tsx","components/orgranisms/PizzaCard/PizzaCard.tsx","hooks/useToggle.ts","components/orgranisms/PizzaCard/PizzaCardSkeleton.tsx","components/orgranisms/PizzaScroller/PizzaScroller.tsx","pages/Home/Home.tsx","App.tsx","serviceWorker.ts","index.tsx","api/graphql.tsx","components/orgranisms/Configurator/Configurator.module.css","components/orgranisms/PizzaCard/PizzaCard.module.css","config/index.ts","components/atoms/Layout/Layout.tsx","components/atoms/Layout/Content.tsx","components/atoms/Button/Button.module.css","components/atoms/Button/Button.tsx","components/atoms/Skeleton/Skeleton.tsx","components/orgranisms/TopNavigation/TopNavigation.module.css","utils/price.ts","components/atoms/Skeleton/Skeleton.module.css","assets/icons/shopping-bag.svg","components/molecules/Dialog/Dialog.module.css","components/atoms/Logo/Logo.module.css"],"names":["Footer","className","s","root","Date","getFullYear","Common","children","Layout","Logo","to","role","aria-label","yummyFace","TopNavigation","useState","sticky","toggleSticky","data","useCartQuery","useEffect","listener","window","pageYOffset","document","addEventListener","passive","removeEventListener","c","withShadow","content","right","href","undefined","cart","length","basket","Button","color","startIcon","width","height","Control","forwardRef","ref","rest","type","cc","module","exports","simulateDelay","Promise","resolve","delay","Math","random","setTimeout","PRODUCTS","id","title","description","prices","size","EUR","USD","cover","CART","product","count","resolvers","Query","products","a","map","p","__typename","Mutation","addToCart","args","cache","previous","readQuery","query","CartDocument","find","inTheCart","item","newItem","filter","sorted","sort","b","writeQuery","removeFromCart","InMemoryCache","client","ApolloClient","typeDefs","Card","props","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","cx","cy","r","x1","y1","x2","y2","_ref","svgRef","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","AnimatedOverlay","animated","DialogOverlay","AnimatedContent","DialogContent","Dialog","buttons","isOpen","label","onDismiss","transitions","useTransition","from","opacity","scale","enter","leave","config","gentle","style","header","closeControl","onClick","Configurator","onAdded","useAddToCartMutation","mutate","Size","M","value","setValue","formattedPrice","formatPrice","Currencies","variables","src","S","m","l","L","alt","info","options","option","active","control","PizzaCard","currency","initial","on","off","toggle","useToggle","price","getMinPrice","coverWrapper","DEFAULT_PRODUCT_COVER","meta","PizzaCardSkeleton","Skeleton","block","line","fluid","PizzaScroller","useProductsQuery","loading","times","Home","Basket","lazy","App","ApolloProvider","fallback","path","element","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","AddToCartDocument","gql","baseOptions","ApolloReactHooks","RemoveFromCartDocument","useRemoveFromCartMutation","ProductsDocument","homepage","DELIVERY_COST","FREE_DELIVERY","Content","endIcon","icon","CurrSymbolsMap","Map","min","toFixed","get","getDeliveryCost","sum","_ref2","d","_ref3","_ref4","SvgShoppingBag"],"mappings":"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","file":"static/js/main.a74187bc.chunk.js","sourcesContent":["import React from 'react';\nimport { Content } from 'src/components/atoms/Layout';\nimport s from './Footer.module.css';\n\nexport const Footer: React.FC = () => (\n  <footer>\n    <Content className={s.root}>\n      © Yummy Pizza {new Date().getFullYear()}\n    </Content>\n  </footer>\n);\n","import React from 'react';\nimport { Footer } from 'src/components/molecules/Footer';\nimport { Layout } from 'src/components/atoms/Layout';\n\nexport const Common: React.FC = ({ children }) => (\n  <Layout>\n    {children}\n    <Footer />\n  </Layout>\n);\n","import React, { HTMLAttributes } from 'react';\nimport { Link } from 'react-router-dom';\nimport s from './Logo.module.css';\n\ntype Props = HTMLAttributes<HTMLSpanElement>;\n\nexport const Logo: React.FC<Props> = () => (\n  <Link to=\"/\" className={s.root} role=\"img\" aria-label=\"yummy pizza logo\">\n    🍕<span className={s.yummyFace}>😋</span> Yummy Pizza\n  </Link>\n);\n","import React, { useEffect, useState } from 'react';\nimport c from 'classcat';\nimport { Link } from 'react-router-dom';\nimport { useCartQuery } from 'src/api/graphql';\nimport { Content } from 'src/components/atoms/Layout';\nimport { Logo } from 'src/components/atoms/Logo';\nimport { Button } from 'src/components/atoms/Button';\nimport { ReactComponent as BasketIcon } from 'src/assets/icons/shopping-bag.svg';\nimport s from './TopNavigation.module.css';\n\nexport const TopNavigation: React.FC = () => {\n  const [sticky, toggleSticky] = useState(false);\n  const { data } = useCartQuery();\n\n  useEffect(() => {\n    const listener = () => toggleSticky(window.pageYOffset > 0);\n    document.addEventListener('scroll', listener, { passive: true });\n\n    return () => document.removeEventListener('scroll', listener);\n  }, []);\n  return (\n    <nav className={c({ [s.root]: true, [s.withShadow]: sticky })}>\n      <Content className={s.content}>\n        <Logo />\n        <span className={s.right}>\n          <a href=\"tel:8 800 232 23 32\">8 800 232 23 32</a>\n          {data !== undefined && data.cart.length > 0 && (\n            <Link className={s.basket} to=\"/basket\">\n              <Button\n                color=\"primary\"\n                startIcon={<BasketIcon width={16} height={16} />}\n              >\n                My Order | {data.cart.length}\n              </Button>\n            </Link>\n          )}\n        </span>\n      </Content>\n    </nav>\n  );\n};\n","import React, { forwardRef, ButtonHTMLAttributes } from 'react';\nimport cc from 'classcat';\nimport s from './Control.module.css';\n\ntype Props = ButtonHTMLAttributes<HTMLButtonElement> & {\n  className?: string;\n};\n\nexport const Control = forwardRef<HTMLButtonElement, Props>(\n  ({ className, children, ...rest }, ref) => (\n    <button\n      ref={ref}\n      type=\"button\"\n      className={cc([s.root, className])}\n      {...rest}\n    >\n      {children}\n    </button>\n  )\n);\n","module.exports = __webpack_public_path__ + \"static/media/schema.client.4a16926a.graphql\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Layout_root__3XKWX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Content_root__3H72a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Footer_root__1Nuow\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Card_root__2tg5c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Control_root__2G95J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PizzaScroller_root__2oIrx\"};","/**\n * Simulate network delay in between 300-800 ms\n */\nexport const simulateDelay = (data: any) =>\n  new Promise(resolve => {\n    const delay = Math.random() * (800 - 300) + 300;\n\n    setTimeout(() => {\n      resolve(data);\n    }, delay);\n  });\n","export const PRODUCTS = [\n  {\n    id: '1',\n    title: 'Pepperoni',\n    description: 'Double pepperoni, mozzarella, marinara sauce, fresh basil',\n    prices: [\n      { size: 'S', EUR: 11.0, USD: 13.0 },\n      { size: 'M', EUR: 13.0, USD: 15.0 },\n      { size: 'L', EUR: 15.0, USD: 18.0 },\n    ],\n    cover: '/assets/covers/1.jpg',\n  },\n  {\n    id: '2',\n    title: 'From Russia with Love',\n    description:\n      'Fries, ranch , grilled chicken, marinara sauce, red onions, pickles , mozzarella',\n    prices: [\n      { size: 'S', EUR: 13.0, USD: 15.0 },\n      { size: 'M', EUR: 15.0, USD: 17.0 },\n      { size: 'L', EUR: 17.0, USD: 19.5 },\n    ],\n    cover: '/assets/covers/2.jpg',\n  },\n  {\n    id: '3',\n    title: 'Chicken BBQ',\n    description:\n      'Grilled chicken, bbq sauce, bacon, mozzarella, fresh basil, red onions',\n    prices: [\n      { size: 'S', EUR: 11.0, USD: 13.0 },\n      { size: 'M', EUR: 14.5, USD: 18.0 },\n      { size: 'L', EUR: 18.0, USD: 22.0 },\n    ],\n    cover: '/assets/covers/3.jpg',\n  },\n  {\n    id: '4',\n    title: 'Hawaiian',\n    description:\n      'Ham, fresh pineapple, mozzarella, marinara sauce, fresh basil',\n    prices: [\n      { size: 'S', EUR: 10.0, USD: 12.0 },\n      { size: 'M', EUR: 12.0, USD: 14.0 },\n      { size: 'L', EUR: 14.0, USD: 16.0 },\n    ],\n    cover: '/assets/covers/4.jpg',\n  },\n  {\n    id: '5',\n    title: 'Spinach Feta',\n    description:\n      'Fresh spinach, feta, ricotta, mozzarella, fresh parsley, red onions',\n    prices: [\n      { size: 'S', EUR: 11.0, USD: 13.0 },\n      { size: 'M', EUR: 15.0, USD: 18.0 },\n      { size: 'L', EUR: 17.5, USD: 121.0 },\n    ],\n    cover: '/assets/covers/5.jpg',\n  },\n  {\n    id: '6',\n    title: 'Veggie',\n    description:\n      'Green peppers, cherry tomatoes, mozzarella, ricotta, fresh parsley, mushrooms, black olives, red onions',\n    prices: [\n      { size: 'S', EUR: 11.0, USD: 13.0 },\n      { size: 'M', EUR: 13.0, USD: 15.0 },\n      { size: 'L', EUR: 15.0, USD: 17.0 },\n    ],\n    cover: '/assets/covers/6.jpg',\n  },\n  {\n    id: '7',\n    title: 'Chicken Club',\n    description:\n      'Grilled chicken, cherry tomatoes, ricotta, fresh parsley, mozzarella, bacon, red onions',\n    prices: [\n      { size: 'S', EUR: 12.0, USD: 15.0 },\n      { size: 'M', EUR: 15.0, USD: 19.0 },\n      { size: 'L', EUR: 18.0, USD: 21.0 },\n    ],\n    cover: '/assets/covers/7.jpg',\n  },\n  {\n    id: '8',\n    title: 'Cheese',\n    description: 'Mozzarella, marinara sauce, fresh basil',\n    prices: [\n      { size: 'S', EUR: 11.9, USD: 15.0 },\n      { size: 'M', EUR: 14.0, USD: 17.0 },\n      { size: 'L', EUR: 17.0, USD: 19.9 },\n    ],\n    cover: '/assets/covers/8.jpg',\n  },\n];\n\n/**\n * @todo Identifiers should be handled on backend\n */\nexport const CART = [\n  {\n    id: `${PRODUCTS[0].id}-M`,\n    product: PRODUCTS[0],\n    size: 'M',\n    count: 1,\n  },\n  {\n    id: `${PRODUCTS[7].id}-S`,\n    product: PRODUCTS[7],\n    size: 'S',\n    count: 2,\n  },\n];\n","import { CustomResolver } from '@apollo/client';\nimport { simulateDelay } from 'src/api/utils/simulateDelay';\nimport { PRODUCTS } from './mock';\n\n/**\n * @todo This should be on backend\n */\nconst products: CustomResolver = async () =>\n  simulateDelay(PRODUCTS.map(p => ({ ...p, __typename: 'Product' })));\n\nexport const resolvers = {\n  Query: {\n    products,\n  },\n};\n","import { CustomResolver } from '@apollo/client';\nimport { CartDocument, CartItem } from 'src/api/graphql';\nimport { simulateDelay } from 'src/api/utils/simulateDelay';\nimport { CART, PRODUCTS } from './mock';\n\n/**\n * @todo This should be on backend\n */\nconst cart: CustomResolver = async () =>\n  simulateDelay(\n    CART.map(({ product, ...rest }) => ({\n      ...rest,\n      product: { ...product, __typename: 'Product' },\n    }))\n  );\n\n/**\n * @todo This should be on backend\n */\nconst addToCart: CustomResolver = async (root, args, { cache }) => {\n  const previous = cache.readQuery({ query: CartDocument });\n  const product = PRODUCTS.find(({ id }) => id === args.id)!;\n  const id = `${product.id}-${args.size}`;\n  const inTheCart = previous.cart.find((item: CartItem) => item.id === id);\n  const newItem = inTheCart\n    ? { ...inTheCart }\n    : {\n        id,\n        product: {\n          ...product,\n          __typename: 'Product',\n        },\n        count: args.count,\n        size: args.size,\n      };\n\n  if (inTheCart) {\n    newItem.count += args.count;\n  }\n\n  const cart = [\n    ...previous.cart.filter((item: CartItem) => item.id !== id),\n    newItem,\n  ];\n\n  const sorted = [...cart].sort((a, b) => (a.id > b.id ? 1 : -1));\n  cache.writeQuery({ query: CartDocument, data: { cart: sorted } });\n\n  return sorted;\n};\n\n/**\n * @todo This should be on backend\n */\nconst removeFromCart: CustomResolver = async (root, args, { cache }) => {\n  const previous = cache.readQuery({ query: CartDocument });\n  const data = {\n    cart: previous.cart.filter(({ id }: CartItem) => id !== args.id),\n  };\n  cache.writeQuery({ query: CartDocument, data });\n\n  return data.cart;\n};\n\nexport const resolvers = {\n  Query: {\n    cart,\n  },\n  Mutation: {\n    addToCart,\n    removeFromCart,\n  },\n};\n","import { ApolloClient, InMemoryCache } from '@apollo/client';\nimport typeDefs from './schema.client.graphql';\nimport { resolvers as products } from './resolvers/products';\nimport { resolvers as cart } from './resolvers/cart';\n\nconst cache = new InMemoryCache();\n\nexport const client = new ApolloClient({\n  cache,\n  typeDefs,\n  resolvers: {\n    Query: {\n      ...products.Query,\n      ...cart.Query,\n    },\n    Mutation: {\n      ...cart.Mutation,\n    },\n  },\n});\n","import React, { HTMLAttributes } from 'react';\nimport c from 'classcat';\nimport s from './Card.module.css';\n\ntype Props = HTMLAttributes<HTMLDivElement>;\n\nexport const Card: React.FC<Props> = ({ children, className, ...props }) => (\n  <article className={c([s.root, className])} {...props}>\n    {children}\n  </article>\n);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 12,\n  cy: 12,\n  r: 10\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"line\", {\n  x1: 15,\n  y1: 9,\n  x2: 9,\n  y2: 15\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"line\", {\n  x1: 9,\n  y1: 9,\n  x2: 15,\n  y2: 15\n});\n\nvar SvgXCircle = function SvgXCircle(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    className: \"feather feather-x-circle\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgXCircle, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/x-circle.c89cb7d9.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Fragment } from 'react';\nimport { config, animated, useTransition } from 'react-spring';\nimport {\n  DialogOverlay,\n  DialogContent,\n  DialogProps as ReachDialogProps,\n} from '@reach/dialog';\nimport { Control } from 'src/components/atoms/Control';\nimport { ReactComponent as CrossIcon } from 'src/assets/icons/x-circle.svg';\nimport s from './Dialog.module.css';\n\nexport type DialogProps = ReachDialogProps & {\n  buttons?: JSX.Element;\n  label: string;\n};\n\nconst AnimatedOverlay = animated(DialogOverlay);\nconst AnimatedContent = animated(DialogContent);\n\nexport const Dialog: React.FC<DialogProps> = ({\n  children,\n  buttons,\n  isOpen,\n  label,\n  onDismiss,\n  ...props\n}) => {\n  const transitions = useTransition(isOpen, {\n    from: { opacity: 0, scale: 0.8 },\n    enter: { opacity: 1, scale: 1 },\n    leave: { opacity: 0, scale: 0.8 },\n    config: config.gentle,\n  });\n\n  return (\n    <Fragment>\n      {transitions(\n        ({ opacity, scale }, isOpen) =>\n          isOpen && (\n            <AnimatedOverlay\n              onDismiss={onDismiss}\n              style={{ opacity }}\n              {...props}\n            >\n              <AnimatedContent style={{ scale }} aria-label={label}>\n                <header className={s.header}>\n                  <span>{label}</span>\n                  <Control className={s.closeControl} onClick={onDismiss}>\n                    <CrossIcon />\n                  </Control>\n                </header>\n                {children}\n                {buttons && <div className={s.buttons}>{buttons}</div>}\n              </AnimatedContent>\n            </AnimatedOverlay>\n          )\n      )}\n    </Fragment>\n  );\n};\n","import React, { useState } from 'react';\nimport c from 'classcat';\nimport { Price, Scalars, Size, useAddToCartMutation } from 'src/api/graphql';\nimport { Currencies } from 'src/config';\nimport { formatPrice } from 'src/utils/price';\nimport { Button } from 'src/components/atoms/Button';\nimport { ReactComponent as BasketIcon } from 'src/assets/icons/shopping-bag.svg';\nimport s from './Configurator.module.css';\n\ntype Props = {\n  id: Scalars['ID'];\n  cover: Maybe<string>;\n  prices: Array<Price>;\n  onAdded(): void;\n};\n\nexport const Configurator: React.FC<Props> = ({\n  id,\n  cover,\n  prices,\n  onAdded,\n}) => {\n  const [mutate] = useAddToCartMutation();\n  const [value, setValue] = useState<Size>(Size.M);\n  const { EUR } = prices.find(({ size }) => size === value)!;\n  const formattedPrice = formatPrice(EUR, Currencies.EUR);\n\n  const addToCart = async () => {\n    await mutate({\n      variables: {\n        id,\n        size: value,\n        count: 1,\n      },\n    });\n    onAdded();\n  };\n\n  return (\n    <div className={s.root}>\n      <div className={s.cover}>\n        <img\n          src={cover ?? ''}\n          className={c({\n            [s.cover]: true,\n            [s.s]: value === Size.S,\n            [s.m]: value === Size.M,\n            [s.l]: value === Size.L,\n          })}\n          alt=\"\"\n        />\n      </div>\n      <div className={s.info}>\n        <div className={s.options}>\n          <button\n            className={c({ [s.option]: true, [s.active]: value === Size.L })}\n            onClick={() => setValue(Size.L)}\n          >\n            Large - 35cm\n          </button>\n          <button\n            className={c({ [s.option]: true, [s.active]: value === Size.M })}\n            onClick={() => setValue(Size.M)}\n          >\n            Medium - 30cm\n          </button>\n          <button\n            className={c({ [s.option]: true, [s.active]: value === Size.S })}\n            onClick={() => setValue(Size.S)}\n          >\n            Small - 25cm\n          </button>\n        </div>\n        <Button\n          className={s.control}\n          startIcon={<BasketIcon width={16} height={16} />}\n          onClick={addToCart}\n        >\n          {formattedPrice}\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Price, Scalars } from 'src/api/graphql';\nimport { Currencies, DEFAULT_PRODUCT_COVER } from 'src/config';\nimport { formatPrice, getMinPrice } from 'src/utils/price';\nimport { useToggle } from 'src/hooks/useToggle';\nimport { Card } from 'src/components/atoms/Card';\nimport { Button } from 'src/components/atoms/Button';\nimport { Dialog } from 'src/components/molecules/Dialog';\nimport { Configurator } from 'src/components/orgranisms/Configurator';\nimport s from './PizzaCard.module.css';\n\ntype Props = {\n  id: Scalars['ID'];\n  cover: Maybe<string>;\n  title: string;\n  description: string;\n  prices: Array<Price>;\n  currency: Currencies;\n};\n\nexport const PizzaCard: React.FC<Props> = ({\n  id,\n  cover,\n  title,\n  description,\n  prices,\n  currency,\n}) => {\n  const { value, on, off } = useToggle(false);\n  const price = getMinPrice(prices, currency);\n\n  return (\n    <Card className={s.root}>\n      <div className={s.coverWrapper}>\n        <img\n          className={s.cover}\n          src={cover ? cover : DEFAULT_PRODUCT_COVER}\n          alt={title}\n        />\n      </div>\n      <div className={s.title}>{title}</div>\n      <div className={s.description}>{description}</div>\n      <div className={s.meta}>\n        <span className={s.price}>from {formatPrice(price, currency)}</span>\n        <Button color=\"secondary\" onClick={on}>\n          Yep, this one\n        </Button>\n      </div>\n      <Dialog label={title} isOpen={value} onDismiss={off}>\n        <Configurator id={id} cover={cover} prices={prices} onAdded={off} />\n        {description}\n      </Dialog>\n    </Card>\n  );\n};\n","import { useState } from 'react';\n\nexport const useToggle = (initial: boolean = false) => {\n  const [value, setValue] = useState(initial);\n\n  const on = () => setValue(true);\n  const off = () => setValue(false);\n  const toggle = () => setValue(!value);\n\n  return { value, on, off, toggle };\n};\n","import React from 'react';\nimport { DEFAULT_PRODUCT_COVER } from 'src/config';\nimport { Card } from 'src/components/atoms/Card';\nimport { Skeleton } from 'src/components/atoms/Skeleton';\nimport s from './PizzaCard.module.css';\n\nexport const PizzaCardSkeleton: React.FC = () => (\n  <Card>\n    <div className={s.coverWrapper}>\n      <img className={s.cover} src={DEFAULT_PRODUCT_COVER} alt=\"Yummy Pizza\" />\n    </div>\n    <div className={s.title}>\n      <Skeleton block line />\n    </div>\n    <div className={s.description}>\n      <Skeleton block line fluid />\n      <Skeleton block line fluid />\n      <Skeleton block line />\n    </div>\n    <div className={s.meta}>\n      <span className={s.price}>\n        <Skeleton block line />\n      </span>\n    </div>\n  </Card>\n);\n","import React from 'react';\nimport { times } from 'ramda';\nimport { Content } from 'src/components/atoms/Layout';\nimport { useProductsQuery } from 'src/api/graphql';\nimport {\n  PizzaCard,\n  PizzaCardSkeleton,\n} from 'src/components/orgranisms/PizzaCard';\nimport { Currencies } from 'src/config';\nimport s from './PizzaScroller.module.css';\n\nconst PRODUCTS_PER_PAGE = 8;\n\nexport const PizzaScroller: React.FC = () => {\n  const { loading, data } = useProductsQuery();\n\n  return (\n    <Content className={s.root}>\n      {loading && times(i => <PizzaCardSkeleton key={i} />, PRODUCTS_PER_PAGE)}\n\n      {!loading &&\n        data?.products?.map(({ id, title, description, prices, cover }) => (\n          <PizzaCard\n            key={id}\n            id={id}\n            title={title}\n            description={description}\n            prices={prices}\n            currency={Currencies.EUR}\n            cover={cover}\n          />\n        ))}\n    </Content>\n  );\n};\n","import React, { Fragment } from 'react';\nimport { SkipNavLink, SkipNavContent } from '@reach/skip-nav';\nimport { Common as Layout } from 'src/layouts/Common';\nimport { TopNavigation } from 'src/components/orgranisms/TopNavigation';\nimport { PizzaScroller } from 'src/components/orgranisms/PizzaScroller';\nimport '@reach/skip-nav/styles.css';\n\nexport const Home: React.FC = () => {\n  return (\n    <Fragment>\n      <SkipNavLink />\n      <TopNavigation />\n      <Layout>\n        <SkipNavContent>\n          <PizzaScroller />\n        </SkipNavContent>\n      </Layout>\n    </Fragment>\n  );\n};\n","import React, { lazy, Suspense } from 'react';\nimport { ApolloProvider } from '@apollo/client';\nimport { HashRouter, Routes, Route } from 'react-router-dom';\nimport { client } from 'src/api/client';\nimport Home from 'src/pages/Home';\nimport './App.css';\n\nconst Basket = lazy(() => import('src/pages/Basket'));\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <HashRouter>\n        <Suspense fallback={<div />}>\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/basket\" element={<Basket />} />\n          </Routes>\n        </Suspense>\n      </HashRouter>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { GraphQLResolveInfo } from 'graphql';\nimport gql from 'graphql-tag';\nimport * as ApolloReactCommon from '@apollo/client';\nimport * as ApolloReactHooks from '@apollo/client';\nexport type Maybe<T> = T | null;\nexport type RequireFields<T, K extends keyof T> = {\n  [X in Exclude<keyof T, K>]?: T[X];\n} &\n  { [P in K]-?: NonNullable<T[P]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n};\n\nexport enum Size {\n  S = 'S',\n  M = 'M',\n  L = 'L',\n}\n\nexport type Price = {\n  __typename?: 'Price';\n  size: Size;\n  EUR: Scalars['Float'];\n  USD: Scalars['Float'];\n};\n\nexport type Product = {\n  __typename?: 'Product';\n  id: Scalars['ID'];\n  title: Scalars['String'];\n  description: Scalars['String'];\n  prices: Array<Price>;\n  cover: Maybe<Scalars['String']>;\n};\n\nexport type CartItem = {\n  __typename?: 'CartItem';\n  id: Scalars['ID'];\n  product: Product;\n  size: Size;\n  count: Scalars['Int'];\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  products: Array<Product>;\n  cart: Array<CartItem>;\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  addToCart: Array<CartItem>;\n  removeFromCart: Array<CartItem>;\n};\n\nexport type MutationAddToCartArgs = {\n  id: Scalars['ID'];\n  size: Size;\n  count: Scalars['Int'];\n};\n\nexport type MutationRemoveFromCartArgs = {\n  id: Scalars['ID'];\n};\n\nexport type ResolverTypeWrapper<T> = Promise<T> | T;\n\nexport type StitchingResolver<TResult, TParent, TContext, TArgs> = {\n  fragment: string;\n  resolve: ResolverFn<TResult, TParent, TContext, TArgs>;\n};\n\nexport type Resolver<TResult, TParent = {}, TContext = {}, TArgs = {}> =\n  | ResolverFn<TResult, TParent, TContext, TArgs>\n  | StitchingResolver<TResult, TParent, TContext, TArgs>;\n\nexport type ResolverFn<TResult, TParent, TContext, TArgs> = (\n  parent: TParent,\n  args: TArgs,\n  context: TContext,\n  info: GraphQLResolveInfo\n) => Promise<TResult> | TResult;\n\nexport type SubscriptionSubscribeFn<TResult, TParent, TContext, TArgs> = (\n  parent: TParent,\n  args: TArgs,\n  context: TContext,\n  info: GraphQLResolveInfo\n) => AsyncIterator<TResult> | Promise<AsyncIterator<TResult>>;\n\nexport type SubscriptionResolveFn<TResult, TParent, TContext, TArgs> = (\n  parent: TParent,\n  args: TArgs,\n  context: TContext,\n  info: GraphQLResolveInfo\n) => TResult | Promise<TResult>;\n\nexport interface SubscriptionSubscriberObject<\n  TResult,\n  TKey extends string,\n  TParent,\n  TContext,\n  TArgs\n> {\n  subscribe: SubscriptionSubscribeFn<\n    { [key in TKey]: TResult },\n    TParent,\n    TContext,\n    TArgs\n  >;\n  resolve?: SubscriptionResolveFn<\n    TResult,\n    { [key in TKey]: TResult },\n    TContext,\n    TArgs\n  >;\n}\n\nexport interface SubscriptionResolverObject<TResult, TParent, TContext, TArgs> {\n  subscribe: SubscriptionSubscribeFn<any, TParent, TContext, TArgs>;\n  resolve: SubscriptionResolveFn<TResult, any, TContext, TArgs>;\n}\n\nexport type SubscriptionObject<\n  TResult,\n  TKey extends string,\n  TParent,\n  TContext,\n  TArgs\n> =\n  | SubscriptionSubscriberObject<TResult, TKey, TParent, TContext, TArgs>\n  | SubscriptionResolverObject<TResult, TParent, TContext, TArgs>;\n\nexport type SubscriptionResolver<\n  TResult,\n  TKey extends string,\n  TParent = {},\n  TContext = {},\n  TArgs = {}\n> =\n  | ((\n      ...args: any[]\n    ) => SubscriptionObject<TResult, TKey, TParent, TContext, TArgs>)\n  | SubscriptionObject<TResult, TKey, TParent, TContext, TArgs>;\n\nexport type TypeResolveFn<TTypes, TParent = {}, TContext = {}> = (\n  parent: TParent,\n  context: TContext,\n  info: GraphQLResolveInfo\n) => Maybe<TTypes> | Promise<Maybe<TTypes>>;\n\nexport type isTypeOfResolverFn<T = {}> = (\n  obj: T,\n  info: GraphQLResolveInfo\n) => boolean | Promise<boolean>;\n\nexport type NextResolverFn<T> = () => Promise<T>;\n\nexport type DirectiveResolverFn<\n  TResult = {},\n  TParent = {},\n  TContext = {},\n  TArgs = {}\n> = (\n  next: NextResolverFn<TResult>,\n  parent: TParent,\n  args: TArgs,\n  context: TContext,\n  info: GraphQLResolveInfo\n) => TResult | Promise<TResult>;\n\n/** Mapping between all available schema types and the resolvers types */\nexport type ResolversTypes = {\n  String: ResolverTypeWrapper<Scalars['String']>;\n  Boolean: ResolverTypeWrapper<Scalars['Boolean']>;\n  Size: Size;\n  Price: ResolverTypeWrapper<Price>;\n  Float: ResolverTypeWrapper<Scalars['Float']>;\n  Product: ResolverTypeWrapper<Product>;\n  ID: ResolverTypeWrapper<Scalars['ID']>;\n  CartItem: ResolverTypeWrapper<CartItem>;\n  Int: ResolverTypeWrapper<Scalars['Int']>;\n  Query: ResolverTypeWrapper<{}>;\n  Mutation: ResolverTypeWrapper<{}>;\n};\n\n/** Mapping between all available schema types and the resolvers parents */\nexport type ResolversParentTypes = {\n  String: Scalars['String'];\n  Boolean: Scalars['Boolean'];\n  Size: Size;\n  Price: Price;\n  Float: Scalars['Float'];\n  Product: Product;\n  ID: Scalars['ID'];\n  CartItem: CartItem;\n  Int: Scalars['Int'];\n  Query: {};\n  Mutation: {};\n};\n\nexport type PriceResolvers<\n  ContextType = any,\n  ParentType extends ResolversParentTypes['Price'] = ResolversParentTypes['Price']\n> = {\n  size: Resolver<ResolversTypes['Size'], ParentType, ContextType>;\n  EUR: Resolver<ResolversTypes['Float'], ParentType, ContextType>;\n  USD: Resolver<ResolversTypes['Float'], ParentType, ContextType>;\n  __isTypeOf?: isTypeOfResolverFn<ParentType>;\n};\n\nexport type ProductResolvers<\n  ContextType = any,\n  ParentType extends ResolversParentTypes['Product'] = ResolversParentTypes['Product']\n> = {\n  id: Resolver<ResolversTypes['ID'], ParentType, ContextType>;\n  title: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  description: Resolver<ResolversTypes['String'], ParentType, ContextType>;\n  prices: Resolver<Array<ResolversTypes['Price']>, ParentType, ContextType>;\n  cover: Resolver<Maybe<ResolversTypes['String']>, ParentType, ContextType>;\n  __isTypeOf?: isTypeOfResolverFn<ParentType>;\n};\n\nexport type CartItemResolvers<\n  ContextType = any,\n  ParentType extends ResolversParentTypes['CartItem'] = ResolversParentTypes['CartItem']\n> = {\n  id: Resolver<ResolversTypes['ID'], ParentType, ContextType>;\n  product: Resolver<ResolversTypes['Product'], ParentType, ContextType>;\n  size: Resolver<ResolversTypes['Size'], ParentType, ContextType>;\n  count: Resolver<ResolversTypes['Int'], ParentType, ContextType>;\n  __isTypeOf?: isTypeOfResolverFn<ParentType>;\n};\n\nexport type QueryResolvers<\n  ContextType = any,\n  ParentType extends ResolversParentTypes['Query'] = ResolversParentTypes['Query']\n> = {\n  products: Resolver<Array<ResolversTypes['Product']>, ParentType, ContextType>;\n  cart: Resolver<Array<ResolversTypes['CartItem']>, ParentType, ContextType>;\n};\n\nexport type MutationResolvers<\n  ContextType = any,\n  ParentType extends ResolversParentTypes['Mutation'] = ResolversParentTypes['Mutation']\n> = {\n  addToCart: Resolver<\n    Array<ResolversTypes['CartItem']>,\n    ParentType,\n    ContextType,\n    RequireFields<MutationAddToCartArgs, 'id' | 'size' | 'count'>\n  >;\n  removeFromCart: Resolver<\n    Array<ResolversTypes['CartItem']>,\n    ParentType,\n    ContextType,\n    RequireFields<MutationRemoveFromCartArgs, 'id'>\n  >;\n};\n\nexport type Resolvers<ContextType = any> = {\n  Price: PriceResolvers<ContextType>;\n  Product: ProductResolvers<ContextType>;\n  CartItem: CartItemResolvers<ContextType>;\n  Query: QueryResolvers<ContextType>;\n  Mutation: MutationResolvers<ContextType>;\n};\n\n/**\n * @deprecated\n * Use \"Resolvers\" root object instead. If you wish to get \"IResolvers\", add \"typesPrefix: I\" to your config.\n */\nexport type IResolvers<ContextType = any> = Resolvers<ContextType>;\n\nexport type AddToCartMutationVariables = {\n  id: Scalars['ID'];\n  size: Size;\n  count: Scalars['Int'];\n};\n\nexport type AddToCartMutation = { __typename?: 'Mutation' } & {\n  addToCart: Array<\n    { __typename?: 'CartItem' } & Pick<CartItem, 'id' | 'size' | 'count'> & {\n        product: { __typename?: 'Product' } & Pick<Product, 'id'>;\n      }\n  >;\n};\n\nexport type RemoveFromCartMutationVariables = {\n  id: Scalars['ID'];\n};\n\nexport type RemoveFromCartMutation = { __typename?: 'Mutation' } & {\n  removeFromCart: Array<\n    { __typename?: 'CartItem' } & Pick<CartItem, 'id' | 'size' | 'count'> & {\n        product: { __typename?: 'Product' } & Pick<Product, 'id'>;\n      }\n  >;\n};\n\nexport type CartQueryVariables = {};\n\nexport type CartQuery = { __typename?: 'Query' } & {\n  cart: Array<\n    { __typename?: 'CartItem' } & Pick<CartItem, 'id' | 'size' | 'count'> & {\n        product: { __typename?: 'Product' } & Pick<\n          Product,\n          'id' | 'title' | 'cover'\n        > & {\n            prices: Array<\n              { __typename?: 'Price' } & Pick<Price, 'size' | 'EUR' | 'USD'>\n            >;\n          };\n      }\n  >;\n};\n\nexport type ProductsQueryVariables = {};\n\nexport type ProductsQuery = { __typename?: 'Query' } & {\n  products: Array<\n    { __typename?: 'Product' } & Pick<\n      Product,\n      'id' | 'title' | 'description' | 'cover'\n    > & {\n        prices: Array<\n          { __typename?: 'Price' } & Pick<Price, 'size' | 'EUR' | 'USD'>\n        >;\n      }\n  >;\n};\n\nexport const AddToCartDocument = gql`\n  mutation addToCart($id: ID!, $size: Size!, $count: Int!) {\n    addToCart(id: $id, size: $size, count: $count) @client {\n      id\n      product {\n        id\n      }\n      size\n      count\n    }\n  }\n`;\nexport type AddToCartMutationFn = ApolloReactCommon.MutationFunction<\n  AddToCartMutation,\n  AddToCartMutationVariables\n>;\n\n/**\n * __useAddToCartMutation__\n *\n * To run a mutation, you first call `useAddToCartMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useAddToCartMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [addToCartMutation, { data, loading, error }] = useAddToCartMutation({\n *   variables: {\n *      id: // value for 'id'\n *      size: // value for 'size'\n *      count: // value for 'count'\n *   },\n * });\n */\nexport function useAddToCartMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    AddToCartMutation,\n    AddToCartMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    AddToCartMutation,\n    AddToCartMutationVariables\n  >(AddToCartDocument, baseOptions);\n}\nexport type AddToCartMutationHookResult = ReturnType<\n  typeof useAddToCartMutation\n>;\nexport type AddToCartMutationResult = ApolloReactCommon.MutationResult<\n  AddToCartMutation\n>;\nexport type AddToCartMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  AddToCartMutation,\n  AddToCartMutationVariables\n>;\nexport const RemoveFromCartDocument = gql`\n  mutation removeFromCart($id: ID!) {\n    removeFromCart(id: $id) @client {\n      id\n      product {\n        id\n      }\n      size\n      count\n    }\n  }\n`;\nexport type RemoveFromCartMutationFn = ApolloReactCommon.MutationFunction<\n  RemoveFromCartMutation,\n  RemoveFromCartMutationVariables\n>;\n\n/**\n * __useRemoveFromCartMutation__\n *\n * To run a mutation, you first call `useRemoveFromCartMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useRemoveFromCartMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [removeFromCartMutation, { data, loading, error }] = useRemoveFromCartMutation({\n *   variables: {\n *      id: // value for 'id'\n *   },\n * });\n */\nexport function useRemoveFromCartMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    RemoveFromCartMutation,\n    RemoveFromCartMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    RemoveFromCartMutation,\n    RemoveFromCartMutationVariables\n  >(RemoveFromCartDocument, baseOptions);\n}\nexport type RemoveFromCartMutationHookResult = ReturnType<\n  typeof useRemoveFromCartMutation\n>;\nexport type RemoveFromCartMutationResult = ApolloReactCommon.MutationResult<\n  RemoveFromCartMutation\n>;\nexport type RemoveFromCartMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  RemoveFromCartMutation,\n  RemoveFromCartMutationVariables\n>;\nexport const CartDocument = gql`\n  query cart {\n    cart @client {\n      id\n      product {\n        id\n        title\n        cover\n        prices {\n          size\n          EUR\n          USD\n        }\n      }\n      size\n      count\n    }\n  }\n`;\n\n/**\n * __useCartQuery__\n *\n * To run a query within a React component, call `useCartQuery` and pass it any options that fit your needs.\n * When your component renders, `useCartQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useCartQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useCartQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<CartQuery, CartQueryVariables>\n) {\n  return ApolloReactHooks.useQuery<CartQuery, CartQueryVariables>(\n    CartDocument,\n    baseOptions\n  );\n}\nexport function useCartLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    CartQuery,\n    CartQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<CartQuery, CartQueryVariables>(\n    CartDocument,\n    baseOptions\n  );\n}\nexport type CartQueryHookResult = ReturnType<typeof useCartQuery>;\nexport type CartLazyQueryHookResult = ReturnType<typeof useCartLazyQuery>;\nexport type CartQueryResult = ApolloReactCommon.QueryResult<\n  CartQuery,\n  CartQueryVariables\n>;\nexport const ProductsDocument = gql`\n  query products {\n    products @client {\n      id\n      title\n      description\n      cover\n      prices {\n        size\n        EUR\n        USD\n      }\n    }\n  }\n`;\n\n/**\n * __useProductsQuery__\n *\n * To run a query within a React component, call `useProductsQuery` and pass it any options that fit your needs.\n * When your component renders, `useProductsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useProductsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useProductsQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<\n    ProductsQuery,\n    ProductsQueryVariables\n  >\n) {\n  return ApolloReactHooks.useQuery<ProductsQuery, ProductsQueryVariables>(\n    ProductsDocument,\n    baseOptions\n  );\n}\nexport function useProductsLazyQuery(\n  baseOptions?: ApolloReactHooks.LazyQueryHookOptions<\n    ProductsQuery,\n    ProductsQueryVariables\n  >\n) {\n  return ApolloReactHooks.useLazyQuery<ProductsQuery, ProductsQueryVariables>(\n    ProductsDocument,\n    baseOptions\n  );\n}\nexport type ProductsQueryHookResult = ReturnType<typeof useProductsQuery>;\nexport type ProductsLazyQueryHookResult = ReturnType<\n  typeof useProductsLazyQuery\n>;\nexport type ProductsQueryResult = ApolloReactCommon.QueryResult<\n  ProductsQuery,\n  ProductsQueryVariables\n>;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Configurator_root__gj0lv\",\"cover\":\"Configurator_cover__1ksAc\",\"s\":\"Configurator_s__3YU0N\",\"m\":\"Configurator_m__3QKZM\",\"l\":\"Configurator_l__1Tfs5\",\"info\":\"Configurator_info__3eBd8\",\"options\":\"Configurator_options__1zn7w\",\"option\":\"Configurator_option__BlBmQ\",\"active\":\"Configurator_active__VfGEm\",\"control\":\"Configurator_control__2kdwt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PizzaCard_root__2Kx-b\",\"coverWrapper\":\"PizzaCard_coverWrapper__2GMH0\",\"cover\":\"PizzaCard_cover__3zyeB\",\"title\":\"PizzaCard_title__2vcH-\",\"description\":\"PizzaCard_description__16wSA\",\"meta\":\"PizzaCard_meta__2-grL\",\"price\":\"PizzaCard_price__1zAmK\"};","import { homepage } from '../../package.json';\n\n/**\n * All available currencies in ISO\n */\nexport enum Currencies {\n  EUR = 'EUR',\n  USD = 'USD',\n}\n\n/**\n * The cover to be shown while product doesn't have one\n */\nexport const DEFAULT_PRODUCT_COVER = `${homepage}/assets/covers/default.svg`;\n\n/**\n * @todo should be present on backend\n */\nexport const DELIVERY_COST = {\n  EUR: 10,\n  USD: 13,\n};\n\n/**\n * @todo should be present on backend\n */\nexport const FREE_DELIVERY = {\n  EUR: 35,\n  USD: 40,\n};\n","import React from 'react';\nimport s from './Layout.module.css';\n\nexport const Layout: React.FC = ({ children }) => {\n  return <main className={s.root}>{children}</main>;\n};\n","import React, { HTMLAttributes } from 'react';\nimport c from 'classcat';\nimport s from './Content.module.css';\n\ntype Props = HTMLAttributes<HTMLDivElement>;\n\nexport const Content: React.FC<Props> = ({ children, className, ...props }) => (\n  <div className={c([s.root, className])} {...props}>\n    {children}\n  </div>\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Button_root__LRtfD\",\"sm\":\"Button_sm__34DNu\",\"md\":\"Button_md__2wPOt\",\"primary\":\"Button_primary__10wIM\",\"secondary\":\"Button_secondary__1rwRo\",\"icon\":\"Button_icon__1HRpv\",\"startIcon\":\"Button_startIcon__3wz7W\",\"endIcon\":\"Button_endIcon__1BnwF\"};","import React, { ButtonHTMLAttributes } from 'react';\nimport c from 'classcat';\nimport s from './Button.module.css';\n\ntype Size = 'sm' | 'md' | 'lg';\ntype Color = 'primary' | 'secondary';\n\ntype Props = ButtonHTMLAttributes<HTMLButtonElement> & {\n  size?: Size;\n  color?: Color;\n  startIcon?: JSX.Element;\n  endIcon?: JSX.Element;\n};\n\nexport const Button: React.FC<Props> = ({\n  children,\n  size = 'md',\n  color = 'primary',\n  startIcon,\n  endIcon,\n  className,\n  ...props\n}) => (\n  <button className={c([s.root, s[size], s[color], className])} {...props}>\n    {startIcon && (\n      <span role=\"img\" className={c([s.icon, s.startIcon])}>\n        {startIcon}\n      </span>\n    )}\n    {children}\n    {endIcon && (\n      <span role=\"img\" className={c([s.icon, s.endIcon])}>\n        {endIcon}\n      </span>\n    )}\n  </button>\n);\n","import React from 'react';\nimport c from 'classcat';\nimport s from './Skeleton.module.css';\n\ntype Props = {\n  line?: boolean;\n  block?: boolean;\n  fluid?: boolean;\n  className?: string;\n};\n\nexport const Skeleton: React.FC<Props> = ({\n  line = false,\n  block = false,\n  fluid = false,\n  className = null,\n}) => (\n  <span\n    className={c({\n      [s.root]: true,\n      ...(className && { [className]: true }),\n      [s.line]: line,\n      [s.block]: block,\n      [s.fluid]: fluid,\n    })}\n  />\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TopNavigation_root__2qBU3\",\"withShadow\":\"TopNavigation_withShadow__y7tPb\",\"content\":\"TopNavigation_content__22MKc\",\"right\":\"TopNavigation_right__15I2B\",\"basket\":\"TopNavigation_basket__21acs\"};","import { Price } from 'src/api/graphql';\nimport { Currencies, DELIVERY_COST, FREE_DELIVERY } from 'src/config';\n\nexport const CurrSymbolsMap = new Map<Currencies, string>([\n  [Currencies.EUR, '€'],\n  [Currencies.USD, '＄'],\n]);\n\n/**\n * Get the lowest of available prices for the given currency\n */\nexport const getMinPrice = (\n  prices: Array<Price>,\n  currency: Currencies = Currencies.EUR\n): number => Math.min(...prices.map(({ [currency]: price }) => price));\n\n/**\n * Get fixed price with currency sign\n */\nexport const formatPrice = (price: number, currency: Currencies): string =>\n  `${price.toFixed(2)} ${CurrSymbolsMap.get(currency)}`;\n\n/**\n * Calculate total sum based on delivery costs.\n * Basically, it should be implemented on backend with address checking.\n */\nexport const getDeliveryCost = (sum: number, currency: Currencies) => {\n  if (sum < FREE_DELIVERY[currency]) {\n    return DELIVERY_COST[currency];\n  }\n\n  return 0;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Skeleton_root__1cC49\",\"pulse\":\"Skeleton_pulse__1HoV4\",\"line\":\"Skeleton_line__nWFAW\",\"fluid\":\"Skeleton_fluid__1Vrza\",\"block\":\"Skeleton_block__1v15l\"};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"line\", {\n  x1: 3,\n  y1: 6,\n  x2: 21,\n  y2: 6\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16 10a4 4 0 0 1-8 0\"\n});\n\nvar SvgShoppingBag = function SvgShoppingBag(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    className: \"feather feather-shopping-bag\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgShoppingBag, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/shopping-bag.c0dc1280.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"Dialog_buttons__8KUhC\",\"header\":\"Dialog_header__184ab\",\"closeControl\":\"Dialog_closeControl__GgsgV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Logo_root__2xaOm\"};"],"sourceRoot":""}